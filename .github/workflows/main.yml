name: Release on Push Tag

permissions:
  contents: write
  actions: write

on:
  push:
    tags:
      - v*
jobs:
  build:
    name: Build Production
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm ci
      - run: npm run build

      - run: tar -czf release.tar.gz -C dist .
        shell: bash

      - run: ls -alrth

      - uses: actions/upload-artifact@v4
        id: upload-dist
        with:
          name: dist
          path: release.tar.gz
          retention-days: 1

      - name: Output artifact ID
        run: echo 'Artifact ID is ${{ steps.upload-dist.outputs.artifact-id }}'

  release:
    name: Release Production
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist

      - run: ls -alrth

      - name: Get Tag and Commit Info
        id: get_commit_info
        run: |
          # 获取标签名称
          TAG_NAME="${{ github.ref_name }}"
          
          # 获取该标签的提交信息
          COMMIT_INFO=$(git log -1 --pretty=format:"%H%n%an%n%s%n%b" "$TAG_NAME")
          
          echo "Tag: $TAG_NAME"
          echo "Commit Info:"
          echo "$COMMIT_INFO"
          
          # 将 COMMIT_INFO 设置为步骤的输出
          echo "::set-output name=commit_info::$COMMIT_INFO"

      - name: create_release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: '${{ github.ref_name }}'
          release_name: 'Release ${{ github.ref_name }}'
          body: |
            Realease ${{ github.ref_name }}
            ${{ steps.get_commit_info.outputs.commit_info }}

          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Upload asset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          upload_url: '${{ steps.create_release.outputs.upload_url }}'
          asset_path: release.tar.gz
          asset_name: release.tar.gz
          asset_content_type: application/gzip
